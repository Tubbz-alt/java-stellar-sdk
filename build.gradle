apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.6
version = '0.3.2.8'
group = 'stellar'

jar {
    manifest {
        attributes 'Implementation-Title': 'stellar-sdk',
                   'Implementation-Version': version
    }
    archiveName 'stellar-sdk.jar'
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.moandjiezana.toml:toml4j:0.5.1'
    compile 'org.mockito:mockito-core:2.13.0'
    compile 'com.google.guava:guava:25.1-jre'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'commons-io:commons-io:2.4'
    compile 'org.glassfish.jersey.core:jersey-client:2.22.1'
    compile 'org.glassfish.jersey.media:jersey-media-sse:2.22.1'
    compile fileTree(dir: 'libs', include: '*.jar')
    testCompile 'com.squareup.okhttp3:mockwebserver:3.9.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }

    repositories {
        project.ext.set('repo', project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases')
        maven {
            url "${nexusUrl}/repository/maven-${project.repo}/"
            credentials(PasswordCredentials) {
                username nexusUsername
                password nexusPassword
            }
        }
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourceJar
}
